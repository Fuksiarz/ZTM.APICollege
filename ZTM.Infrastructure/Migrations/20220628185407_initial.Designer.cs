// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ZTM.Infrastructure.Context;

#nullable disable

namespace ZTM.Infrastructure.Migrations
{
    [DbContext(typeof(MainContext))]
    [Migration("20220628185407_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.3");

            modelBuilder.Entity("StopTimetable", b =>
                {
                    b.Property<int>("ScheduleId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TimetablesId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ScheduleId", "TimetablesId");

                    b.HasIndex("TimetablesId");

                    b.ToTable("StopTimetable");
                });

            modelBuilder.Entity("ZTM.Infrastructure.Entities.Bus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Destination")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DriverId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Line")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DriverId");

                    b.ToTable("Bus");
                });

            modelBuilder.Entity("ZTM.Infrastructure.Entities.Driver", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("FirstName")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Surname")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Driver");
                });

            modelBuilder.Entity("ZTM.Infrastructure.Entities.Stop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Address")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("BusId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("BusId1")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DriverId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Side")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("StopId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("BusId");

                    b.HasIndex("BusId1");

                    b.HasIndex("DriverId");

                    b.HasIndex("StopId");

                    b.ToTable("Stop");
                });

            modelBuilder.Entity("ZTM.Infrastructure.Entities.Timetable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<TimeOnly>("ArriveTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("DayOfWeek")
                        .HasColumnType("INTEGER");

                    b.Property<TimeOnly>("LeaveTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("LineId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("LineId");

                    b.ToTable("Timetable");
                });

            modelBuilder.Entity("StopTimetable", b =>
                {
                    b.HasOne("ZTM.Infrastructure.Entities.Stop", null)
                        .WithMany()
                        .HasForeignKey("ScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZTM.Infrastructure.Entities.Timetable", null)
                        .WithMany()
                        .HasForeignKey("TimetablesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ZTM.Infrastructure.Entities.Bus", b =>
                {
                    b.HasOne("ZTM.Infrastructure.Entities.Driver", "Driver")
                        .WithMany()
                        .HasForeignKey("DriverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Driver");
                });

            modelBuilder.Entity("ZTM.Infrastructure.Entities.Stop", b =>
                {
                    b.HasOne("ZTM.Infrastructure.Entities.Bus", null)
                        .WithMany("Schedule")
                        .HasForeignKey("BusId");

                    b.HasOne("ZTM.Infrastructure.Entities.Bus", null)
                        .WithMany("Stops")
                        .HasForeignKey("BusId1");

                    b.HasOne("ZTM.Infrastructure.Entities.Driver", null)
                        .WithMany("Schedule")
                        .HasForeignKey("DriverId");

                    b.HasOne("ZTM.Infrastructure.Entities.Stop", null)
                        .WithMany("Schedule")
                        .HasForeignKey("StopId");
                });

            modelBuilder.Entity("ZTM.Infrastructure.Entities.Timetable", b =>
                {
                    b.HasOne("ZTM.Infrastructure.Entities.Bus", "Line")
                        .WithMany()
                        .HasForeignKey("LineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Line");
                });

            modelBuilder.Entity("ZTM.Infrastructure.Entities.Bus", b =>
                {
                    b.Navigation("Schedule");

                    b.Navigation("Stops");
                });

            modelBuilder.Entity("ZTM.Infrastructure.Entities.Driver", b =>
                {
                    b.Navigation("Schedule");
                });

            modelBuilder.Entity("ZTM.Infrastructure.Entities.Stop", b =>
                {
                    b.Navigation("Schedule");
                });
#pragma warning restore 612, 618
        }
    }
}
